# AI-Optimized Business Rules
# Machine-readable business logic and validation rules for AI processing

business_rules:
  step_validation:
    customer_step:
      name: "Customer Step Validation"
      description: "Validation rules for customer information step"
      required_fields:
        - name: "email"
          type: "string"
          validation: "isValidEmail"
          description: "Customer email address"
          error_message: "Email is required"
        - name: "firstName"
          type: "string"
          validation: "required"
          description: "Customer first name"
          error_message: "First name is required"
        - name: "lastName"
          type: "string"
          validation: "required"
          description: "Customer last name"
          error_message: "Last name is required"
      optional_fields:
        - name: "phone"
          type: "string"
          validation: "isValidPhone"
          description: "Customer phone number"
      completion_criteria: "hasEmail || isUsingWallet"
      dependencies:
        - name: "wallet_payment"
          type: "boolean"
          description: "Whether using wallet payment"
        - name: "guest_checkout"
          type: "boolean"
          description: "Whether using guest checkout"
      conflicts:
        - name: "stripe_link_reload"
          condition: "providerWithCustomCheckout === 'stripeupe' && hasEmail && isGuest && shouldUseStripeLinkByMinimumAmount"
          description: "Stripe Link reload conflict"

    shipping_step:
      name: "Shipping Step Validation"
      description: "Validation rules for shipping information step"
      required_fields:
        - name: "address"
          type: "string"
          validation: "required"
          description: "Shipping address"
          error_message: "Address is required"
        - name: "city"
          type: "string"
          validation: "required"
          description: "Shipping city"
          error_message: "City is required"
        - name: "state"
          type: "string"
          validation: "required"
          description: "Shipping state"
          error_message: "State is required"
        - name: "postalCode"
          type: "string"
          validation: "required"
          description: "Shipping postal code"
          error_message: "Postal code is required"
      optional_fields:
        - name: "company"
          type: "string"
          validation: "optional"
          description: "Company name"
        - name: "apartment"
          type: "string"
          validation: "optional"
          description: "Apartment/suite number"
      completion_criteria: "hasAddress && hasOptions && !hasUnassignedItems"
      dependencies:
        - name: "shipping_address"
          type: "Address"
          description: "Valid shipping address"
        - name: "shipping_options"
          type: "ShippingOption[]"
          description: "Selected shipping options"
        - name: "unassigned_items"
          type: "boolean"
          description: "Whether all items are assigned"
      conflicts:
        - name: "promotional_items"
          condition: "cartHasPromotionalItems && isMultiShippingMode"
          description: "Promotional items conflict with multi-shipping"

    billing_step:
      name: "Billing Step Validation"
      description: "Validation rules for billing information step"
      required_fields:
        - name: "address"
          type: "string"
          validation: "required"
          description: "Billing address"
          error_message: "Billing address is required"
        - name: "city"
          type: "string"
          validation: "required"
          description: "Billing city"
          error_message: "City is required"
        - name: "state"
          type: "string"
          validation: "required"
          description: "Billing state"
          error_message: "State is required"
        - name: "postalCode"
          type: "string"
          validation: "required"
          description: "Billing postal code"
          error_message: "Postal code is required"
      completion_criteria: "hasAddress || isUsingWallet"
      dependencies:
        - name: "billing_address"
          type: "Address"
          description: "Valid billing address"
        - name: "wallet_payment"
          type: "boolean"
          description: "Whether using wallet payment"
      payment_method_specific:
        amazon_pay:
          required_fields:
            - name: "custom_fields"
              type: "AddressField[]"
              validation: "required"
              description: "Amazon Pay custom fields"
          completion_criteria: "hasCustomFields ? isValidAddress(billingAddress, customFields) : true"
        google_pay:
          required_fields:
            - name: "address"
              type: "string"
              validation: "required"
              description: "Google Pay billing address"
          completion_criteria: "hasAddress"
        paypal:
          required_fields:
            - name: "address"
              type: "string"
              validation: "required"
              description: "PayPal billing address"
          completion_criteria: "hasAddress"

    payment_step:
      name: "Payment Step Validation"
      description: "Validation rules for payment information step"
      required_fields:
        - name: "payment_method"
          type: "string"
          validation: "required"
          description: "Selected payment method"
          error_message: "Payment method is required"
        - name: "payment_data"
          type: "object"
          validation: "required"
          description: "Payment method specific data"
      completion_criteria: "order.isComplete"
      dependencies:
        - name: "order"
          type: "Order"
          description: "Order object"
        - name: "payment_methods"
          type: "PaymentMethod[]"
          description: "Available payment methods"
      payment_method_validation:
        credit_card:
          required_fields:
            - name: "cardNumber"
              type: "string"
              validation: "isValidCardNumber"
              description: "Credit card number"
            - name: "expiryDate"
              type: "string"
              validation: "isValidExpiryDate"
              description: "Card expiry date"
            - name: "cvv"
              type: "string"
              validation: "isValidCVV"
              description: "Card CVV"
            - name: "cardholderName"
              type: "string"
              validation: "required"
              description: "Cardholder name"
        paypal:
          required_fields:
            - name: "paypal_account"
              type: "string"
              validation: "required"
              description: "PayPal account"
        apple_pay:
          required_fields:
            - name: "apple_pay_token"
              type: "string"
              validation: "required"
              description: "Apple Pay token"

  step_dependencies:
    sequential_dependencies:
      description: "Steps must be completed in sequence"
      rules:
        - step: "shipping"
          requires: ["customer"]
          condition: "customer.isComplete"
        - step: "billing"
          requires: ["customer"]
          condition: "customer.isComplete"
        - step: "payment"
          requires: ["billing", "shipping"]
          condition: "billing.isComplete && shipping.isComplete"
        - step: "order_details"
          requires: ["payment"]
          condition: "payment.isComplete"

    conditional_dependencies:
      description: "Dependencies based on checkout configuration"
      rules:
        - step: "shipping"
          condition: "itemsRequireShipping(cart, config)"
          description: "Shipping only required if items need shipping"
        - step: "billing"
          condition: "!isUsingWallet"
          description: "Billing not required for wallet payments"
        - step: "payment"
          condition: "true"
          description: "Payment always required"

  step_combination:
    poa_checkout:
      description: "Point of Access checkout combines billing and payment"
      combined_steps:
        - name: "billing_and_payment"
          combines: ["billing", "payment"]
          completion_criteria: "billing.isComplete && payment.isComplete"
          editability: "billing.isEditable && payment.isEditable"
          requirements: "billing.isRequired || payment.isRequired"
      individual_steps:
        - name: "billing"
          status: "disabled"
          description: "Individual billing step disabled in POA"
        - name: "payment"
          status: "disabled"
          description: "Individual payment step disabled in POA"

  feature_flags:
    experiments:
      STRIPE_546:
        name: "allow_billing_address_editing_for_all_Google_Pay_providers"
        description: "Allow billing address editing for Google Pay"
        affects:
          - "billing_step"
          - "google_pay_validation"
        condition: "isExperimentEnabled(config.checkoutSettings, 'STRIPE-546.allow_billing_address_editing_for_all_Google_Pay_providers')"
      
      PROJECT_5015:
        name: "manual_order.display_custom_shipping"
        description: "Display custom shipping option"
        affects:
          - "shipping_step"
          - "shipping_options"
        condition: "isExperimentEnabled(config.checkoutSettings, 'PROJECT-5015.manual_order.display_custom_shipping')"
      
      PROJECT_6643:
        name: "enable_shipping_discounts_in_orders"
        description: "Enable shipping discounts in orders"
        affects:
          - "shipping_step"
          - "order_display"
        condition: "isExperimentEnabled(config.checkoutSettings, 'PROJECT-6643.enable_shipping_discounts_in_orders')"

  validation_functions:
    email_validation:
      name: "isValidEmail"
      description: "Validate email address format"
      implementation: "emailRegex.test(email)"
      regex: "^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$"
      error_message: "Invalid email format"
    
    phone_validation:
      name: "isValidPhone"
      description: "Validate phone number format"
      implementation: "phoneRegex.test(phone)"
      regex: "^\\+?[1-9]\\d{1,14}$"
      error_message: "Invalid phone number format"
    
    address_validation:
      name: "isValidAddress"
      description: "Validate address with country-specific fields"
      parameters:
        - name: "address"
          type: "Address"
          description: "Address object to validate"
        - name: "fields"
          type: "AddressField[]"
          description: "Country-specific address fields"
      implementation: "validateAddressFields(address, fields)"
      error_message: "Invalid address format"
    
    card_validation:
      name: "isValidCardNumber"
      description: "Validate credit card number using Luhn algorithm"
      implementation: "luhnCheck(cardNumber)"
      error_message: "Invalid card number"
    
    expiry_validation:
      name: "isValidExpiryDate"
      description: "Validate card expiry date"
      implementation: "isValidExpiry(expiryDate)"
      format: "MM/YY"
      error_message: "Invalid expiry date"
    
    cvv_validation:
      name: "isValidCVV"
      description: "Validate card CVV"
      implementation: "cvvRegex.test(cvv)"
      regex: "^\\d{3,4}$"
      error_message: "Invalid CVV"

  error_handling:
    error_types:
      validation_error:
        name: "ValidationError"
        description: "Field validation failed"
        handling: "Show field-specific error message"
        recovery: "Fix invalid field and retry"
      
      network_error:
        name: "NetworkError"
        description: "Network request failed"
        handling: "Show network error message"
        recovery: "Retry request or check connection"
      
      payment_error:
        name: "PaymentError"
        description: "Payment processing failed"
        handling: "Show payment error message"
        recovery: "Try different payment method"
      
      cart_changed_error:
        name: "CartChangedError"
        description: "Cart contents changed during checkout"
        handling: "Show cart changed message"
        recovery: "Reload checkout with updated cart"
    
    error_recovery:
      retry_strategies:
        - name: "immediate_retry"
          condition: "network_error"
          max_attempts: 3
          delay: 1000
        - name: "user_retry"
          condition: "validation_error"
          requires_user_action: true
        - name: "reload_checkout"
          condition: "cart_changed_error"
          action: "reload_checkout"

  performance_rules:
    optimization:
      memoization:
        - name: "step_status_calculation"
          selector: "getCheckoutStepStatuses"
          dependencies: ["customerStep", "shippingStep", "billingStep", "paymentStep"]
        - name: "address_validation"
          selector: "isValidAddress"
          dependencies: ["address", "addressFields"]
      
      lazy_loading:
        - name: "checkout_components"
          condition: "step.isActive"
          implementation: "React.lazy with retry"
      
      caching:
        - name: "transition_delays"
          property: "timeoutDelay"
          condition: "contentRef.current exists"
          implementation: "Cache computed style values"
    
    memory_management:
      cleanup:
        - name: "timeout_cleanup"
          lifecycle: "componentWillUnmount"
          action: "clearTimeout(timeoutRef)"
        - name: "event_listener_cleanup"
          lifecycle: "componentWillUnmount"
          action: "removeEventListener"
        - name: "subscription_cleanup"
          lifecycle: "componentWillUnmount"
          action: "unsubscribe"
